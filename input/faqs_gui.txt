{"0": {"question": "Tkinter", "answer": "Standard builds of Python include an object-oriented interface to the Tcl/Tk\nwidget set, called "}, "1": {"question": "wxWidgets", "answer": "wxWidgets ("}, "2": {"question": "Qt", "answer": "There are bindings available for the Qt toolkit (using either "}, "3": {"question": "Gtk+", "answer": "The "}, "4": {"question": "Kivy", "answer": " is a cross-platform GUI library supporting both\ndesktop operating systems (Windows, macOS, Linux) and mobile devices (Android,\niOS).  It is written in Python and Cython, and can use a range of windowing\nbackends."}, "5": {"question": "FLTK", "answer": "Python bindings for "}, "6": {"question": "OpenGL", "answer": "For OpenGL bindings, see "}, "7": {"question": "How do I freeze Tkinter applications?", "answer": "Freeze is a tool to create stand-alone applications.  When freezing Tkinter\napplications, the applications will not be truly stand-alone, as the application\nwill still need the Tcl and Tk libraries."}, "8": {"question": "Can I have Tk events handled while waiting for I/O?", "answer": "On platforms other than Windows, yes, and you don\u2019t even\nneed threads!  But you\u2019ll have to restructure your I/O\ncode a bit.  Tk has the equivalent of Xt\u2019s "}, "9": {"question": "I can\u2019t get key bindings to work in Tkinter: why?", "answer": "An often-heard complaint is that event handlers bound to events with the\n"}}