{"0": {"question": "What is Python?", "answer": "Python is an interpreted, interactive, object-oriented programming language.  It\nincorporates modules, exceptions, dynamic typing, very high level dynamic data\ntypes, and classes.  Python combines remarkable power with very clear syntax.\nIt has interfaces to many system calls and libraries, as well as to various\nwindow systems, and is extensible in C or C++.  It is also usable as an\nextension language for applications that need a programmable interface.\nFinally, Python is portable: it runs on many Unix variants, on the Mac, and on\nWindows 2000 and later."}, "1": {"question": "What is the Python Software Foundation?", "answer": "The Python Software Foundation is an independent non-profit organization that\nholds the copyright on Python versions 2.1 and newer.  The PSF\u2019s mission is to\nadvance open source technology related to the Python programming language and to\npublicize the use of Python.  The PSF\u2019s home page is at\n"}, "2": {"question": "Are there copyright restrictions on the use of Python?", "answer": "You can do anything you want with the source, as long as you leave the\ncopyrights in and display those copyrights in any documentation about Python\nthat you produce.  If you honor the copyright rules, it\u2019s OK to use Python for\ncommercial use, to sell copies of Python in source or binary form (modified or\nunmodified), or to sell products that incorporate Python in some form.  We would\nstill like to know about all commercial use of Python, of course."}, "3": {"question": "Why was Python created in the first place?", "answer": "Here\u2019s a "}, "4": {"question": "What is Python good for?", "answer": "Python is a high-level general-purpose programming language that can be applied\nto many different classes of problems."}, "5": {"question": "How does the Python version numbering scheme work?", "answer": "Python versions are numbered A.B.C or A.B.  A is the major version number \u2013 it\nis only incremented for really major changes in the language.  B is the minor\nversion number, incremented for less earth-shattering changes.  C is the\nmicro-level \u2013 it is incremented for each bugfix release.  See "}, "6": {"question": "How do I obtain a copy of the Python source?", "answer": "The latest Python source distribution is always available from python.org, at\n"}, "7": {"question": "How do I get documentation on Python?", "answer": "The standard documentation for the current stable version of Python is available\nat "}, "8": {"question": "I\u2019ve never programmed before. Is there a Python tutorial?", "answer": "There are numerous tutorials and books available.  The standard documentation\nincludes "}, "9": {"question": "Is there a newsgroup or mailing list devoted to Python?", "answer": "There is a newsgroup, "}, "10": {"question": "How do I get a beta test version of Python?", "answer": "Alpha and beta releases are available from "}, "11": {"question": "How do I submit bug reports and patches for Python?", "answer": "To report a bug or submit a patch, please use the Roundup installation at\n"}, "12": {"question": "Are there any published articles about Python that I can reference?", "answer": "It\u2019s probably best to cite your favorite book about Python."}, "13": {"question": "Are there any books on Python?", "answer": "Yes, there are many, and more are being published.  See the python.org wiki at\n"}, "14": {"question": "Where in the world is www.python.org located?", "answer": "The Python project\u2019s infrastructure is located all over the world.\n"}, "15": {"question": "Why is it called Python?", "answer": "When he began implementing Python, Guido van Rossum was also reading the\npublished scripts from "}, "16": {"question": "Do I have to like \u201cMonty Python\u2019s Flying Circus\u201d?", "answer": "No, but it helps.  :)"}, "17": {"question": "How stable is Python?", "answer": "Very stable.  New, stable releases have been coming out roughly every 6 to 18\nmonths since 1991, and this seems likely to continue.  Currently there are\nusually around 18 months between major releases."}, "18": {"question": "How many people are using Python?", "answer": "There are probably tens of thousands of users, though it\u2019s difficult to obtain\nan exact count."}, "19": {"question": "Have any significant projects been done in Python?", "answer": "See "}, "20": {"question": "What new developments are expected for Python in the future?", "answer": "See "}, "21": {"question": "Is it reasonable to propose incompatible changes to Python?", "answer": "In general, no.  There are already millions of lines of Python code around the\nworld, so any change in the language that invalidates more than a very small\nfraction of existing programs has to be frowned upon.  Even if you can provide a\nconversion program, there\u2019s still the problem of updating all documentation;\nmany books have been written about Python, and we don\u2019t want to invalidate them\nall at a single stroke."}, "22": {"question": "Is Python a good language for beginning programmers?", "answer": "Yes."}}